// <auto-generated />
using System;
using Badun.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Badun.Migrations
{
    [DbContext(typeof(InitModels.MyDbContext))]
    [Migration("20180929011717_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Badun.Models.AdBanner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("HouseId");

                    b.Property<string>("PicContent");

                    b.Property<string>("PicPath");

                    b.HasKey("Id");

                    b.ToTable("AdBanners");
                });

            modelBuilder.Entity("Badun.Models.Applet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Logo");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpDate");

                    b.Property<string>("appid");

                    b.Property<string>("secret");

                    b.Property<string>("sub_mch_id");

                    b.HasKey("Id");

                    b.ToTable("Applet");
                });

            modelBuilder.Entity("Badun.Models.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsHot");

                    b.Property<string>("Name");

                    b.Property<int>("WeightValue");

                    b.HasKey("Id");

                    b.ToTable("Citys");
                });

            modelBuilder.Entity("Badun.Models.Device", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<string>("Logo");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Badun.Models.House", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Area");

                    b.Property<string>("BedInfo");

                    b.Property<string>("CityId");

                    b.Property<int>("CollectNum");

                    b.Property<DateTime>("CreatDate");

                    b.Property<int>("EvaluateNum");

                    b.Property<int>("HowArea");

                    b.Property<int>("HowBed");

                    b.Property<int>("HowCook");

                    b.Property<int>("HowHall");

                    b.Property<int>("HowRoom");

                    b.Property<int>("HowWC");

                    b.Property<string>("Introduce");

                    b.Property<string>("Introduce_rim");

                    b.Property<bool>("IsHot");

                    b.Property<string>("Latitude");

                    b.Property<int>("LikeNum");

                    b.Property<string>("Logo");

                    b.Property<string>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("Notice");

                    b.Property<int>("PeopleNum");

                    b.Property<int>("Price");

                    b.Property<int>("ReceptionNum");

                    b.Property<int>("SaveNum");

                    b.Property<DateTime>("UpDate");

                    b.Property<int>("WeightValue");

                    b.HasKey("Id");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("Badun.Models.HouseBanner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("HouseId");

                    b.Property<string>("PicPath");

                    b.HasKey("Id");

                    b.ToTable("HouseBanners");
                });

            modelBuilder.Entity("Badun.Models.HouseDevice", b =>
                {
                    b.Property<long>("HouseId");

                    b.Property<long>("DeviceId");

                    b.HasKey("HouseId", "DeviceId");

                    b.HasAlternateKey("DeviceId", "HouseId");

                    b.ToTable("HouseDevices");
                });

            modelBuilder.Entity("Badun.Models.HouseFood", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<long>("HouseId");

                    b.Property<string>("Name");

                    b.Property<string>("PicPath");

                    b.HasKey("Id");

                    b.ToTable("HouseFoods");
                });

            modelBuilder.Entity("Badun.Models.HouseNotice", b =>
                {
                    b.Property<long>("HouseId");

                    b.Property<long>("NoticeId");

                    b.HasKey("HouseId", "NoticeId");

                    b.HasIndex("NoticeId");

                    b.ToTable("HouseNotices");
                });

            modelBuilder.Entity("Badun.Models.HouseService", b =>
                {
                    b.Property<long>("HouseId");

                    b.Property<long>("ServiceId");

                    b.HasKey("HouseId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("HouseServices");
                });

            modelBuilder.Entity("Badun.Models.HouseUnsub", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Logo");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("HouseUnsubs");
                });

            modelBuilder.Entity("Badun.Models.Limit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("Limits");
                });

            modelBuilder.Entity("Badun.Models.Notice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("Badun.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<DateTime>("BeginDate");

                    b.Property<string>("BeginDatestr");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("EndDatestr");

                    b.Property<long>("HouseId");

                    b.Property<int>("State");

                    b.Property<DateTime>("UpDate");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Badun.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatDate");

                    b.Property<bool>("IsDel");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpDate");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Badun.Models.Role_Limit", b =>
                {
                    b.Property<long>("RoleId");

                    b.Property<long>("LimitId");

                    b.HasKey("RoleId", "LimitId");

                    b.HasAlternateKey("LimitId", "RoleId");

                    b.ToTable("Role_Limits");
                });

            modelBuilder.Entity("Badun.Models.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Badun.Models.Sys_User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account");

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsDel");

                    b.Property<string>("Logo");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<long>("RoleId");

                    b.Property<string>("RoleName");

                    b.Property<string>("Salt");

                    b.Property<string>("Token");

                    b.Property<DateTime>("UpDate");

                    b.HasKey("Id");

                    b.ToTable("Sys_Users");
                });

            modelBuilder.Entity("Badun.Models.Traveling", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Banner");

                    b.Property<long>("CityId");

                    b.Property<int>("ClickNum");

                    b.Property<DateTime>("CreatDate");

                    b.Property<bool>("IsHot");

                    b.Property<string>("Logo");

                    b.Property<string>("Title");

                    b.Property<DateTime>("UpDate");

                    b.Property<string>("Video");

                    b.Property<int>("WeightValue");

                    b.Property<int>("ZanNum");

                    b.HasKey("Id");

                    b.ToTable("Travelings");
                });

            modelBuilder.Entity("Badun.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("IDNum");

                    b.Property<int>("Integral");

                    b.Property<int>("IsCert");

                    b.Property<int>("IsReal");

                    b.Property<string>("PhoneNum");

                    b.Property<string>("Token");

                    b.Property<DateTime>("UpDate");

                    b.Property<string>("We_AvtUrl");

                    b.Property<string>("We_Name");

                    b.Property<string>("We_OpenId");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Badun.Models.UserCollect", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<long>("HouseId");

                    b.Property<DateTime>("UpDate");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserCollects");
                });

            modelBuilder.Entity("Badun.Models.UserIntegral", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("Integral");

                    b.Property<int>("Type");

                    b.Property<DateTime>("UpDate");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserIntegrals");
                });

            modelBuilder.Entity("Badun.Models.HouseDevice", b =>
                {
                    b.HasOne("Badun.Models.Device", "Devices")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Badun.Models.House", "Houses")
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Badun.Models.HouseNotice", b =>
                {
                    b.HasOne("Badun.Models.House", "Houses")
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Badun.Models.Notice", "Notices")
                        .WithMany()
                        .HasForeignKey("NoticeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Badun.Models.HouseService", b =>
                {
                    b.HasOne("Badun.Models.House", "Houses")
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Badun.Models.Service", "Services")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Badun.Models.Role_Limit", b =>
                {
                    b.HasOne("Badun.Models.Limit", "limits")
                        .WithMany("Role_Limits")
                        .HasForeignKey("LimitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Badun.Models.Role", "Roles")
                        .WithMany("Role_Limits")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
